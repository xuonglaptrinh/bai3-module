// Generated by CoffeeScript 1.7.1
(function() {
  var MyLogger, MyStringUtils, _, __myConsole,
    __slice = [].slice;

  _ = require('underscore');

  __myConsole = console;

  MyStringUtils = require('./my_string_utils_step_1');

  MyLogger = (function() {
    function MyLogger() {}

    MyLogger.log = function() {
      var messages, msg, msgs, _i, _len;
      msgs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      __myConsole.log('callee name: ', arguments.callee.toString());
      messages = '';
      for (_i = 0, _len = msgs.length; _i < _len; _i++) {
        msg = msgs[_i];
        messages += _.isString(msg) ? msg : JSON.stringify(msg, null, '\t') + ' ';
      }
      __myConsole.log(MyStringUtils.getDateTimeStr(), ': ', messages);
    };

    MyLogger.debug = function() {
      var messages, msg, msgs, _i, _len;
      msgs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      messages = '';
      for (_i = 0, _len = msgs.length; _i < _len; _i++) {
        msg = msgs[_i];
        messages += _.isString(msg) ? msg : JSON.stringify(msg, null, '\t') + ' ';
      }
      __myConsole.info(MyStringUtils.getDateTimeStr(), ': ', messages);
    };

    MyLogger.warn = function() {
      var messages, msg, msgs, _i, _len;
      msgs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      messages = '';
      for (_i = 0, _len = msgs.length; _i < _len; _i++) {
        msg = msgs[_i];
        messages += _.isString(msg) ? msg : JSON.stringify(msg, null, '\t') + ' ';
      }
      __myConsole.warn(MyStringUtils.getDateTimeStr(), ': ', messages);
    };

    MyLogger.error = function() {
      var messages, msg, msgs, _i, _len;
      msgs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      messages = '';
      for (_i = 0, _len = msgs.length; _i < _len; _i++) {
        msg = msgs[_i];
        messages += _.isString(msg) ? msg : JSON.stringify(msg, null, '\t') + ' ';
      }
      __myConsole.error(MyStringUtils.getDateTimeStr(), ': ', messages);
    };

    return MyLogger;

  })();

  module.exports = MyLogger;

}).call(this);
